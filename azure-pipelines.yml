# Trigger on pushes to `master`
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - contrib
    - src
    - test
    - Project.toml

# Trigger on PRs against `master`
pr:
  branches:
    include:
    - master
  paths:
    include:
    - contrib
    - src
    - test
    - Project.toml

# By default, use the `Native` pool of agents
pool: BinaryBuilder

variables:
  JULIA: unbuffer julia-1.7 --project=$(Build.SourcesDirectory) --color=yes
  BINARYBUILDER_AUTOMATIC_APPLE: true
  BINARYBUILDER_USE_CCACHE: true
  CI: true

jobs:
- job: Info
  steps:
  - checkout: self
    fetchDepth: 99999
    clean: true
  - bash: |
      set -e
      $(JULIA) -e 'using Pkg; Pkg.Registry.update(); Pkg.instantiate()'
      $(JULIA) -e 'using BinaryBuilder; BinaryBuilder.versioninfo()'
      $(JULIA) -e 'using Pkg; Pkg.status(; mode=PKGMODE_MANIFEST)'
    name: SystemInfo

- job: Test
  dependsOn: Info
  timeoutInMinutes: 120
  strategy:
    matrix:
      Privileged_SquashFS:
        BINARYBUILDER_RUNNER: privileged
        BINARYBUILDER_USE_SQUASHFS: true
      Unprivileged_Unpacked:
        BINARYBUILDER_RUNNER: unprivileged
        BINARYBUILDER_USE_SQUASHFS: false
        BINARYBUILDER_FULL_SHARD_TEST: true
      Docker_Unpacked:
        BINARYBUILDER_RUNNER: docker
        BINARYBUILDER_USE_SQUASHFS: false

  steps:
  - bash: |
      set -e
      $(JULIA) -e 'using Pkg; Pkg.gc()'
      $(JULIA) --check-bounds=yes --inline=yes -e 'using Pkg; Pkg.Registry.update(); Pkg.instantiate(); Pkg.test(coverage=true)'
      $(JULIA) -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder())' || true
    name: Test

  - bash: |
      for dir in $(find ${TMPDIR} -name .mounts); do
          sudo umount ${dir}/* || true
      done
      rm -rf ${TMPDIR}/jl_* || true
    name: Cleanup
    condition: always()
