# Usually this is run using something like:
#   julia build_hashes.jl ~/src/built_shards | tee ../src/RootFSHashTable.jl
using SHA, BinaryProvider

if !isdir(ARGS[1])
    println("Usage: build_hashes.jl /path/to/shards > hash_table.jl")
end

println("## This file auto-generated by deps/build_hashes.jl")
println("shard_hash_table = Dict{CompilerShard,String}(")
for fname in readdir(ARGS[1])
    if fname[end-6:end] != ".tar.gz"
        continue
    end
    fname = joinpath(ARGS[1], fname)

    name, version, platform = extract_name_version_platform_key(fname)
    tar_hash = open(fname, "r") do f
        bytes2hex(sha256(f))
    end
    println("    CompilerShard($(repr(name)), $(repr(version)), $(repr(platform)), :targz)")
    println("      => $(repr(tar_hash)),")
    squash_hash = open(fname[1:end-7]*".squashfs", "r") do f
        bytes2hex(sha256(f))
    end
    println("    CompilerShard($(repr(name)), $(repr(version)), $(repr(platform)), :squashfs)")
    println("      => $(repr(squash_hash)),")
end
println(")")
